@using Visionamos.SitiosWeb.Recursos
@using Visionamos.Operations.DataAccess.ViewModels.EnterpriseSecurity
@using Visionamos.Operations.DataAccess.Models.Integracion
@model AccionGrid_UI

@{
    Layout = null;
    app_user app_user = Session["Usuario"] as app_user;
    var permmisions = app_user.perfiles.perfiles_formularios.FirstOrDefault();
    int idFormulario = Convert.ToInt32(Request.QueryString["idFormulario"]);

}

<script>
    function errorHandlerEndGridExtension(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            MensajeInformativo(message);
            $("#grid").data("kendoGrid").cancelChanges();
        }
    }

    function onRequestStartGridExtension(e) {
        if (e.type == "create") {
            LoadingStart('Un momento por favor.');
        } else if (e.type == "destroy") {
            LoadingStart('Un momento por favor.');
        } else if (e.type == "update") {
            LoadingStart('Un momento por favor.');
        }
        else {
            LoadingStart('Cargando Información.');
        }
    }

    function onRequestEndGridExtension(e) {
        LoadingStop();
        if (e.type == "update" && !e.response.Errors) {
            $("#grid").data("kendoGrid").dataSource.read();
            MensajeSuccess("Solicitud realizada con éxito");
        }

        if (e.type == "create" && !e.response.Errors) {
            $("#grid").data("kendoGrid").dataSource.read();
            MensajeSuccess("Solicitud realizada con éxito");
        }

        if (e.type == "destroy" && !e.response.Errors) {
            MensajeSuccess("Solicitud realizada con éxito");
        }
    }

    function onDeleteEndGridExtension(e) {
        evt = e;
        var dialog = $("<div></div>");

        dialog.kendoDialog({
            width: "350px",
            title: "Confirmación",
            closable: true,
            modal: true,
            content: "<p>¿Está seguro(a), de querer eliminar el registro?<p>",
            actions: [
                { text: 'Cancelar' },
                { text: 'Aceptar', primary: true, action: DeleteGridExtension }
            ]
        });
        dialog.data("kendoDialog").open();
    }

    function DeleteGridExtension() {
        var grid = $("#grid").data("kendoGrid");
        grid.removeRow($(evt.target).closest("tr"));
    }

    function onDetailAction(e) {
        e.preventDefault();
        detailsTemplate = kendo.template($("#template-detail-action").html());
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#windowAction").data("kendoWindow");
        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    }

    function onEdit(e) {
        if (!e.model.isNew()) {
            $("#ActionCode").attr('readonly', true);
            $("#ActionName").attr('readonly', true);
        }
    }

    function checkInput(e) {
        if (/^[0-9A-Za-zÁ-Ýá-ý ñÑ]+$/gi.test(e.key))
            return;
        e.preventDefault();
        e.stopPropagation();
    }
</script>

<style>
    .table > tbody > tr > td {
        border-top: 0px;
    }
</style>

@(Html.Kendo().Grid<AccionGrid_UI>()
    .Name("grid")
    .Events(e =>
    {
        e.Edit("onEdit");
    })
    .ToolBar(toolbar =>
    {
        if (permmisions.accion_new == true)
        {
            toolbar.Create().Text(WebUiResourceForms.Add).HtmlAttributes( new { id="Create"});
        }
        toolbar.Excel().Text(WebUiResourceForms.Excel);
        toolbar.Pdf().Text(WebUiResourceForms.PDF);
    })
    .Columns(column =>
    {
        column.Command(command =>
        {
            if (permmisions.accion_consultar == true)
            {
                command.Custom("Detalle")
                .Text("<span class = 'k-icon k-i-eye'></span>")
                .Click("onDetailAction")
                .HtmlAttributes(new { rel = "tooltip", title = "Ver detalle", data_toogle = "tooltip", data_placement = "rigth", @style = "align-text:center;" });
            }

            if (permmisions.accion_update == true)
            {
                command.Edit()
                    .CancelText(WebUiResourceForms.Cancel)
                    .UpdateText(WebUiResourceForms.Acept)
                    .Text(" ")
                    .HtmlAttributes(new { rel = "tooltip", dataToggle = "tooltip", title = "Editar" });
            }

            if (permmisions.accion_delete == true)
            {
                command.Custom("Eliminar")
                    .Click("onDeleteEndGridExtension")
                    .Text("<span class='k-icon k-i-delete'></span>")
                    .HtmlAttributes(new { title = "Eliminar" });
            }

        }).Title(WebUiResourceForms.Actions).HtmlAttributes(new { @style = "text-align:center;" });
    })
    .Columns(column =>
    {
        column.Bound(p => p.Guid).Hidden();
        column.Bound(p => p.ActionCode);
        column.Bound(p => p.ActionName);
        column.Bound(p => p.ActionDescription);
        column.Bound(p => p.State);
    })
    .Selectable()
    .Pageable(p =>
    {
        p.Messages(m => m
        .Display(WebUiResourceForms.Display)
        .Empty(WebUiResourceForms.Empty)
        .First(WebUiResourceForms.First)
        .Last(WebUiResourceForms.Last)
        .Next(WebUiResourceForms.Next)
        .Previous(WebUiResourceForms.Previous)
        .ItemsPerPage(WebUiResourceForms.ItemsPerPage));
        p.Refresh(true);
        p.PageSizes(new int[] { 50, 100, 200, 500, 1000 });
        p.ButtonCount(4);
    })
    .Filterable(filterable =>
    {
        filterable.Messages(m => m
            .Filter(WebUiResourceForms.Filter)
            .Clear(WebUiResourceForms.Clear)
            .Info(WebUiResourceForms.Info));
        filterable.Extra(false);
        filterable.Enabled(true);
        filterable.Operators(operators =>
            operators.ForString(str =>
                str.Clear()
                    .Contains(WebUiResourceForms.Contains)
                    .StartsWith(WebUiResourceForms.StartsWith)
                    .IsEqualTo(WebUiResourceForms.IsEqualTo)
                    .IsNotEqualTo(WebUiResourceForms.IsNotEqualTo)
                    .EndsWith(WebUiResourceForms.EndsWith)
        ));
    })
    .Sortable()
    .Scrollable(s => s.Virtual(true))
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .ServerOperation(false)
        .Events(events =>
        {
            events.Error("errorHandlerEndGridExtension");
            events.RequestStart("onRequestStartGridExtension");
            events.RequestEnd("onRequestEndGridExtension");
        })
        .Read(read => read.Action("Read", "Accion"))
        .Create(create => create.Action("Create", "Accion"))
        .Update(update => update.Action("Update", "Accion"))
        .Destroy(delete => delete.Action("Delete", "Accion"))
        .Model(m =>
        {
            m.Id(f => f.Guid);
        })
    )
    .Editable(e => e.Mode(GridEditMode.PopUp).TemplateName("Accion/EditorTemplatesAccion").AdditionalViewData(null)
    .Window(w => w.Width(404).Title(WebUiResourceForms.CreateEdit + " " + WebUiResourceForms.TitleAction)).DisplayDeleteConfirmation(false))
    .HtmlAttributes(new { @style = "height: 92% !important;" })
)

@(Html.Kendo().Window()
    .Name("windowAction")
    .Modal(true)
    .Width(400)
    .Title("Detalle " + WebUiResourceForms.TitleAction)
    .Visible(false)
    .Content(@<text>
        <script id="template-detail-action" type="text/x-kendo-template">
            <div id="template-detail-action">
                <table class="table" style="width:100%;margin:0;">
                    <tr><td><label>Código:      </label></td><td>#=ActionCode#        </td></tr>
                    <tr><td><label>Nombre:      </label></td><td>#=ActionName#        </td></tr>
                    <tr><td><label>Descripción: </label></td><td>#=ActionDescription# </td></tr>
                    <tr><td><label>Estado:      </label></td><td>#=State#             </td></tr>
                </table>
            </div>
        </script>
    </text>)
)
